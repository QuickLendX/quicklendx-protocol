name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'quicklendx-frontend/**'
  pull_request:
    branches: [ "main", "develop" ]
    paths:
      - 'quicklendx-frontend/**'

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: Test and Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: quicklendx-frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd quicklendx-frontend
        npm ci

    - name: Run TypeScript type checking
      run: |
        cd quicklendx-frontend
        npx tsc --noEmit

    - name: Run ESLint
      run: |
        cd quicklendx-frontend
        npm run lint

    - name: Run Prettier check
      run: |
        cd quicklendx-frontend
        npx prettier --check .

    - name: Run security audit
      run: |
        cd quicklendx-frontend
        npm audit --audit-level moderate

    - name: Run tests (placeholder for future test framework)
      run: |
        cd quicklendx-frontend
        echo "Tests will be implemented in future iterations"
        # npm test

  build:
    name: Build and Optimize
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: quicklendx-frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd quicklendx-frontend
        npm ci

    - name: Build application
      run: |
        cd quicklendx-frontend
        npm run build

    - name: Analyze bundle size
      run: |
        cd quicklendx-frontend
        npx @next/bundle-analyzer .next/static/chunks --out-dir bundle-analysis || echo "Bundle analyzer not available"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: quicklendx-frontend/.next
        retention-days: 7

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: quicklendx-frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd quicklendx-frontend
        npm ci

    - name: Build for staging
      run: |
        cd quicklendx-frontend
        npm run build
      env:
        NEXT_PUBLIC_ENV: staging

    - name: Deploy to staging (placeholder)
      run: |
        echo "Staging deployment will be configured based on hosting platform"
        echo "Examples: Vercel, Netlify, AWS S3, etc."

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: quicklendx-frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd quicklendx-frontend
        npm ci

    - name: Build for production
      run: |
        cd quicklendx-frontend
        npm run build
      env:
        NEXT_PUBLIC_ENV: production

    - name: Deploy to production (placeholder)
      run: |
        echo "Production deployment will be configured based on hosting platform"
        echo "Examples: Vercel, Netlify, AWS S3, etc." 